# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:08:57+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class AddFirebaseRequest(BaseModel):
    pass


class Bucket(BaseModel):
    name: Optional[str] = Field(None, description='Resource name of the bucket.')


class Empty(BaseModel):
    pass


class State(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    CREATING_TEMP_BUCKET = 'CREATING_TEMP_BUCKET'
    TRANSFERRING_TO_TEMP = 'TRANSFERRING_TO_TEMP'
    DELETING_SOURCE_BUCKET = 'DELETING_SOURCE_BUCKET'
    CREATING_DESTINATION_BUCKET = 'CREATING_DESTINATION_BUCKET'
    TRANSFERRING_TO_DESTINATION = 'TRANSFERRING_TO_DESTINATION'
    DELETING_TEMP_BUCKET = 'DELETING_TEMP_BUCKET'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    ROLLING_BACK = 'ROLLING_BACK'
    ROLLED_BACK = 'ROLLED_BACK'


class GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata(
    BaseModel
):
    createTime: Optional[str] = Field(None, description='The time the LRO was created.')
    lastUpdateTime: Optional[str] = Field(
        None, description='The time the LRO was last updated.'
    )
    state: Optional[State] = Field(
        None, description='The current state of the migration.'
    )


class GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata(
    BaseModel
):
    createTime: Optional[str] = Field(None, description='The time the LRO was created.')
    lastUpdateTime: Optional[str] = Field(
        None, description='The time the LRO was last updated.'
    )
    state: Optional[State] = Field(
        None, description='The current state of the migration.'
    )


class ListBucketsResponse(BaseModel):
    buckets: Optional[List[Bucket]] = Field(
        None, description='The list of linked buckets.'
    )
    nextPageToken: Optional[str] = Field(
        None,
        description='A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.',
    )


class RemoveFirebaseRequest(BaseModel):
    pass


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'
